

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Sep 19 01:27:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F1840 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  008C                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  010C                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0115                     	;# 
    96  0116                     	;# 
    97  0117                     	;# 
    98  0118                     	;# 
    99  0119                     	;# 
   100  011A                     	;# 
   101  011B                     	;# 
   102  011D                     	;# 
   103  011D                     	;# 
   104  018C                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0197                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019C                     	;# 
   122  019C                     	;# 
   123  019D                     	;# 
   124  019E                     	;# 
   125  019F                     	;# 
   126  020C                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0292                     	;# 
   145  0293                     	;# 
   146  0294                     	;# 
   147  0295                     	;# 
   148  0295                     	;# 
   149  0296                     	;# 
   150  0391                     	;# 
   151  0392                     	;# 
   152  0393                     	;# 
   153  039A                     	;# 
   154  039C                     	;# 
   155  039D                     	;# 
   156  039E                     	;# 
   157  039F                     	;# 
   158  0FE4                     	;# 
   159  0FE5                     	;# 
   160  0FE6                     	;# 
   161  0FE7                     	;# 
   162  0FE8                     	;# 
   163  0FE9                     	;# 
   164  0FEA                     	;# 
   165  0FEB                     	;# 
   166  0FED                     	;# 
   167  0FEE                     	;# 
   168  0FEF                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  008C                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  010C                     	;# 
   210  0111                     	;# 
   211  0112                     	;# 
   212  0115                     	;# 
   213  0116                     	;# 
   214  0117                     	;# 
   215  0118                     	;# 
   216  0119                     	;# 
   217  011A                     	;# 
   218  011B                     	;# 
   219  011D                     	;# 
   220  011D                     	;# 
   221  018C                     	;# 
   222  0191                     	;# 
   223  0191                     	;# 
   224  0192                     	;# 
   225  0193                     	;# 
   226  0193                     	;# 
   227  0193                     	;# 
   228  0194                     	;# 
   229  0195                     	;# 
   230  0196                     	;# 
   231  0197                     	;# 
   232  0199                     	;# 
   233  019A                     	;# 
   234  019B                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019C                     	;# 
   239  019C                     	;# 
   240  019D                     	;# 
   241  019E                     	;# 
   242  019F                     	;# 
   243  020C                     	;# 
   244  0211                     	;# 
   245  0211                     	;# 
   246  0212                     	;# 
   247  0212                     	;# 
   248  0213                     	;# 
   249  0213                     	;# 
   250  0214                     	;# 
   251  0214                     	;# 
   252  0215                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0216                     	;# 
   256  0216                     	;# 
   257  0217                     	;# 
   258  0217                     	;# 
   259  0291                     	;# 
   260  0291                     	;# 
   261  0292                     	;# 
   262  0293                     	;# 
   263  0294                     	;# 
   264  0295                     	;# 
   265  0295                     	;# 
   266  0296                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  0393                     	;# 
   270  039A                     	;# 
   271  039C                     	;# 
   272  039D                     	;# 
   273  039E                     	;# 
   274  039F                     	;# 
   275  0FE4                     	;# 
   276  0FE5                     	;# 
   277  0FE6                     	;# 
   278  0FE7                     	;# 
   279  0FE8                     	;# 
   280  0FE9                     	;# 
   281  0FEA                     	;# 
   282  0FEB                     	;# 
   283  0FED                     	;# 
   284  0FEE                     	;# 
   285  0FEF                     	;# 
   286  008C                     _TRISAbits	set	140
   287  009A                     _OSCSTATbits	set	154
   288  0099                     _OSCCONbits	set	153
   289  019A                     _TXREG	set	410
   290  019D                     _RCSTAbits	set	413
   291  019B                     _SPBRG	set	411
   292  019F                     _BAUDCONbits	set	415
   293  019E                     _TXSTAbits	set	414
   294                           
   295                           	psect	stringtext1
   296  0800                     __pstringtext1:
   297  0800                     STR_1:
   298  0800  3441               	retlw	65	;'A'
   299  0801  3442               	retlw	66	;'B'
   300  0802  3443               	retlw	67	;'C'
   301  0803  3444               	retlw	68	;'D'
   302  0804  3400               	retlw	0
   303                           
   304                           	psect	stringtext2
   305  0000                     __pstringtext2:
   306                           
   307                           	psect	cinit
   308  07FD                     start_initialization:	
   309                           ; #config settings
   310                           
   311  07FD                     __initialization:
   312  07FD                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  07FD                     __end_of__initialization:
   316  07FD  0020               	movlb	0
   317  07FE  3187  2FDD         	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	cstackCOMMON
   320  0070                     __pcstackCOMMON:
   321  0070                     ?_MCUinit:
   322  0070                     ??_MCUinit:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_UART_write:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_UART_write:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_OSCinit:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_OSCinit:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_IOinit:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_IOinit:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_UARTinit:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ??_UARTinit:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_main:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     UART_write@c:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 1 bytes @ 0x0
   357  0070                     	ds	1
   358  0071                     ?_UART_writeStr:
   359  0071                     UART_writeStr@data:	
   360                           ; 1 bytes @ 0x1
   361                           
   362                           
   363                           ; 2 bytes @ 0x1
   364  0071                     	ds	2
   365  0073                     ??_UART_writeStr:
   366                           
   367                           ; 1 bytes @ 0x3
   368  0073                     	ds	1
   369  0074                     ??_main:
   370                           
   371                           ; 1 bytes @ 0x4
   372  0074                     	ds	2
   373                           
   374                           	psect	maintext
   375  07DD                     __pmaintext:	
   376 ;;
   377 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   378 ;;
   379 ;; *************** function _main *****************
   380 ;; Defined at:
   381 ;;		line 31 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : B1F/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   395 ;;      Params:         0       0       0       0
   396 ;;      Locals:         0       0       0       0
   397 ;;      Temps:          2       0       0       0
   398 ;;      Totals:         2       0       0       0
   399 ;;Total ram usage:        2 bytes
   400 ;; Hardware stack levels required when called: 2
   401 ;; This function calls:
   402 ;;		_MCUinit
   403 ;;		_UART_write
   404 ;;		_UART_writeStr
   405 ;; This function is called by:
   406 ;;		Startup code after reset
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           
   411                           ;psect for function _main
   412  07DD                     _main:
   413  07DD                     l724:	
   414                           ;incstack = 0
   415                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   416                           
   417                           
   418                           ;main.c: 33:     MCUinit();
   419  07DD  3187  27AE  3187   	fcall	_MCUinit
   420  07E0                     l726:
   421                           
   422                           ;main.c: 37:   {;main.c: 50:       UART_writeStr("ABCD");
   423  07E0  3000               	movlw	low (STR_1| (0+32768))
   424  07E1  00F1               	movwf	UART_writeStr@data
   425  07E2  3088               	movlw	high (STR_1| (0+32768))
   426  07E3  00F2               	movwf	UART_writeStr@data+1
   427  07E4  3187  27C6  3187   	fcall	_UART_writeStr
   428  07E7                     l728:
   429                           
   430                           ;main.c: 51:       UART_write(0x0A);
   431  07E7  300A               	movlw	10
   432  07E8  3187  27A5  3187   	fcall	_UART_write
   433  07EB                     l730:
   434                           
   435                           ;main.c: 52:       UART_write(0x0D);
   436  07EB  300D               	movlw	13
   437  07EC  3187  27A5  3187   	fcall	_UART_write
   438  07EF                     l732:
   439                           
   440                           ;main.c: 54:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   441  07EF  3006               	movlw	6
   442  07F0  00F5               	movwf	??_main+1
   443  07F1  3013               	movlw	19
   444  07F2  00F4               	movwf	??_main
   445  07F3  30AE               	movlw	174
   446  07F4                     u57:
   447  07F4  0B89               	decfsz	9,f
   448  07F5  2FF4               	goto	u57
   449  07F6  0BF4               	decfsz	??_main,f
   450  07F7  2FF4               	goto	u57
   451  07F8  0BF5               	decfsz	??_main+1,f
   452  07F9  2FF4               	goto	u57
   453  07FA  2FE0               	goto	l726
   454  07FB  3180  2802         	ljmp	start
   455  07FD                     __end_of_main:
   456                           
   457                           	psect	text1
   458  07C6                     __ptext1:	
   459 ;; *************** function _UART_writeStr *****************
   460 ;; Defined at:
   461 ;;		line 110 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  data            2    1[COMMON] PTR unsigned char 
   464 ;;		 -> STR_1(5), 
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   476 ;;      Params:         2       0       0       0
   477 ;;      Locals:         0       0       0       0
   478 ;;      Temps:          1       0       0       0
   479 ;;      Totals:         3       0       0       0
   480 ;;Total ram usage:        3 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; Hardware stack levels required when called: 1
   483 ;; This function calls:
   484 ;;		_UART_write
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _UART_writeStr
   492  07C6                     _UART_writeStr:
   493  07C6                     l716:	
   494                           ;incstack = 0
   495                           ; Regs used in _UART_writeStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   496                           
   497                           
   498                           ;main.c: 111:     while(*data){
   499  07C6  2FD3               	goto	l722
   500  07C7                     l718:
   501                           
   502                           ;main.c: 112:        UART_write(*data++);
   503  07C7  0871               	movf	UART_writeStr@data,w
   504  07C8  0084               	movwf	4
   505  07C9  0872               	movf	UART_writeStr@data+1,w
   506  07CA  0085               	movwf	5
   507  07CB  0800               	movf	0,w	;code access
   508  07CC  3187  27A5  3187   	fcall	_UART_write
   509  07CF                     l720:
   510  07CF  3001               	movlw	1
   511  07D0  07F1               	addwf	UART_writeStr@data,f
   512  07D1  3000               	movlw	0
   513  07D2  3DF2               	addwfc	UART_writeStr@data+1,f
   514  07D3                     l722:
   515                           
   516                           ;main.c: 111:     while(*data){
   517  07D3  0871               	movf	UART_writeStr@data,w
   518  07D4  0084               	movwf	4
   519  07D5  0872               	movf	UART_writeStr@data+1,w
   520  07D6  0085               	movwf	5
   521  07D7  0012               	moviw fsr0++
   522  07D8  1D03               	btfss	3,2
   523  07D9  2FDB               	goto	u41
   524  07DA  2FDC               	goto	u40
   525  07DB                     u41:
   526  07DB  2FC7               	goto	l718
   527  07DC                     u40:
   528  07DC                     l68:
   529  07DC  0008               	return
   530  07DD                     __end_of_UART_writeStr:
   531                           
   532                           	psect	text2
   533  07A5                     __ptext2:	
   534 ;; *************** function _UART_write *****************
   535 ;; Defined at:
   536 ;;		line 105 in file "main.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;  c               1    wreg     unsigned char 
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  c               1    0[COMMON] unsigned char 
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   550 ;;      Params:         0       0       0       0
   551 ;;      Locals:         1       0       0       0
   552 ;;      Temps:          0       0       0       0
   553 ;;      Totals:         1       0       0       0
   554 ;;Total ram usage:        1 bytes
   555 ;; Hardware stack levels used: 1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_main
   560 ;;		_UART_writeStr
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           
   565                           ;psect for function _UART_write
   566  07A5                     _UART_write:
   567                           
   568                           ;incstack = 0
   569                           ; Regs used in _UART_write: [wreg]
   570                           ;UART_write@c stored from wreg
   571  07A5  00F0               	movwf	UART_write@c
   572  07A6                     l676:
   573  07A6                     l59:	
   574                           ;main.c: 106:     while(!TXSTAbits.TRMT);
   575                           
   576  07A6  0023               	movlb	3	; select bank3
   577  07A7  1C9E               	btfss	30,1	;volatile
   578  07A8  2FAA               	goto	u11
   579  07A9  2FAB               	goto	u10
   580  07AA                     u11:
   581  07AA  2FA6               	goto	l59
   582  07AB                     u10:
   583  07AB                     l678:
   584                           
   585                           ;main.c: 107:     TXREG = c;
   586  07AB  0870               	movf	UART_write@c,w
   587  07AC  009A               	movwf	26	;volatile
   588  07AD                     l62:
   589  07AD  0008               	return
   590  07AE                     __end_of_UART_write:
   591                           
   592                           	psect	text3
   593  07AE                     __ptext3:	
   594 ;; *************** function _MCUinit *****************
   595 ;; Defined at:
   596 ;;		line 60 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   610 ;;      Params:         0       0       0       0
   611 ;;      Locals:         0       0       0       0
   612 ;;      Temps:          0       0       0       0
   613 ;;      Totals:         0       0       0       0
   614 ;;Total ram usage:        0 bytes
   615 ;; Hardware stack levels used: 1
   616 ;; Hardware stack levels required when called: 1
   617 ;; This function calls:
   618 ;;		_IOinit
   619 ;;		_OSCinit
   620 ;;		_UARTinit
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _MCUinit
   628  07AE                     _MCUinit:
   629  07AE                     l692:	
   630                           ;incstack = 0
   631                           ; Regs used in _MCUinit: [wreg+status,2+status,0+pclath+cstack]
   632                           
   633                           
   634                           ;main.c: 61:     OSCinit();
   635  07AE  3187  27B8  3187   	fcall	_OSCinit
   636  07B1                     l694:
   637                           
   638                           ;main.c: 62:     IOinit();
   639  07B1  3187  2798  3187   	fcall	_IOinit
   640  07B4                     l696:
   641                           
   642                           ;main.c: 64:     UARTinit();
   643  07B4  3187  279C  3187   	fcall	_UARTinit
   644  07B7                     l41:
   645  07B7  0008               	return
   646  07B8                     __end_of_MCUinit:
   647                           
   648                           	psect	text4
   649  079C                     __ptext4:	
   650 ;; *************** function _UARTinit *****************
   651 ;; Defined at:
   652 ;;		line 94 in file "main.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   666 ;;      Params:         0       0       0       0
   667 ;;      Locals:         0       0       0       0
   668 ;;      Temps:          0       0       0       0
   669 ;;      Totals:         0       0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_MCUinit
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _UARTinit
   681  079C                     _UARTinit:
   682  079C                     l684:	
   683                           ;incstack = 0
   684                           ; Regs used in _UARTinit: [wreg]
   685                           
   686                           
   687                           ;main.c: 95:     TXSTAbits.SYNC = 0;
   688  079C  0023               	movlb	3	; select bank3
   689  079D  121E               	bcf	30,4	;volatile
   690                           
   691                           ;main.c: 96:     TXSTAbits.BRGH = 1;
   692  079E  151E               	bsf	30,2	;volatile
   693                           
   694                           ;main.c: 97:     BAUDCONbits.BRG16 = 0;
   695  079F  119F               	bcf	31,3	;volatile
   696  07A0                     l686:
   697                           
   698                           ;main.c: 98:     SPBRG = 25;
   699  07A0  3019               	movlw	25
   700  07A1  009B               	movwf	27	;volatile
   701  07A2                     l688:
   702                           
   703                           ;main.c: 100:     RCSTAbits.SPEN = 1;
   704  07A2  179D               	bsf	29,7	;volatile
   705  07A3                     l690:
   706                           
   707                           ;main.c: 101:     TXSTAbits.TXEN = 1;
   708  07A3  169E               	bsf	30,5	;volatile
   709  07A4                     l56:
   710  07A4  0008               	return
   711  07A5                     __end_of_UARTinit:
   712                           
   713                           	psect	text5
   714  07B8                     __ptext5:	
   715 ;; *************** function _OSCinit *****************
   716 ;; Defined at:
   717 ;;		line 68 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   731 ;;      Params:         0       0       0       0
   732 ;;      Locals:         0       0       0       0
   733 ;;      Temps:          0       0       0       0
   734 ;;      Totals:         0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_MCUinit
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           
   745                           ;psect for function _OSCinit
   746  07B8                     _OSCinit:
   747  07B8                     l680:	
   748                           ;incstack = 0
   749                           ; Regs used in _OSCinit: [wreg+status,2+status,0]
   750                           
   751                           
   752                           ;main.c: 69:     OSCCONbits.SCS = 0B10;
   753  07B8  0021               	movlb	1	; select bank1
   754  07B9  0819               	movf	25,w	;volatile
   755  07BA  39FC               	andlw	-4
   756  07BB  3802               	iorlw	2
   757  07BC  0099               	movwf	25	;volatile
   758                           
   759                           ;main.c: 70:     OSCCONbits.IRCF = 0B1101;
   760  07BD  0819               	movf	25,w	;volatile
   761  07BE  3987               	andlw	-121
   762  07BF  3868               	iorlw	104
   763  07C0  0099               	movwf	25	;volatile
   764  07C1                     l44:	
   765                           ;main.c: 71:     while(OSCSTATbits.HFIOFS != 1);
   766                           
   767  07C1  1C1A               	btfss	26,0	;volatile
   768  07C2  2FC4               	goto	u21
   769  07C3  2FC5               	goto	u20
   770  07C4                     u21:
   771  07C4  2FC1               	goto	l44
   772  07C5                     u20:
   773  07C5                     l47:
   774  07C5  0008               	return
   775  07C6                     __end_of_OSCinit:
   776                           
   777                           	psect	text6
   778  0798                     __ptext6:	
   779 ;; *************** function _IOinit *****************
   780 ;; Defined at:
   781 ;;		line 74 in file "main.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		None
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   795 ;;      Params:         0       0       0       0
   796 ;;      Locals:         0       0       0       0
   797 ;;      Temps:          0       0       0       0
   798 ;;      Totals:         0       0       0       0
   799 ;;Total ram usage:        0 bytes
   800 ;; Hardware stack levels used: 1
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_MCUinit
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _IOinit
   810  0798                     _IOinit:
   811  0798                     l682:	
   812                           ;incstack = 0
   813                           ; Regs used in _IOinit: []
   814                           
   815                           
   816                           ;main.c: 75:     TRISAbits.TRISA0 = 0;
   817  0798  0021               	movlb	1	; select bank1
   818  0799  100C               	bcf	12,0	;volatile
   819                           
   820                           ;main.c: 76:     TRISAbits.TRISA1 = 1;
   821  079A  148C               	bsf	12,1	;volatile
   822  079B                     l50:
   823  079B  0008               	return
   824  079C                     __end_of_IOinit:
   825  007E                     btemp	set	126	;btemp
   826  007E                     wtemp0	set	126
   827                           
   828                           	psect	config
   829                           
   830                           ;Config register CONFIG1 @ 0x8007
   831                           ;	Oscillator Selection
   832                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   833                           ;	Watchdog Timer Enable
   834                           ;	WDTE = OFF, WDT disabled
   835                           ;	Power-up Timer Enable
   836                           ;	PWRTE = OFF, PWRT disabled
   837                           ;	MCLR Pin Function Select
   838                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
   839                           ;	Flash Program Memory Code Protection
   840                           ;	CP = OFF, Program memory code protection is disabled
   841                           ;	Data Memory Code Protection
   842                           ;	CPD = OFF, Data memory code protection is disabled
   843                           ;	Brown-out Reset Enable
   844                           ;	BOREN = OFF, Brown-out Reset disabled
   845                           ;	Clock Out Enable
   846                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   847                           ;	Internal/External Switchover
   848                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   849                           ;	Fail-Safe Clock Monitor Enable
   850                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   851  8007                     	org	32775
   852  8007  09A4               	dw	2468
   853                           
   854                           ;Config register CONFIG2 @ 0x8008
   855                           ;	Flash Memory Self-Write Protection
   856                           ;	WRT = OFF, Write protection off
   857                           ;	PLL Enable
   858                           ;	PLLEN = OFF, 4x PLL disabled
   859                           ;	Stack Overflow/Underflow Reset Enable
   860                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
   861                           ;	Brown-out Reset Voltage Selection
   862                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   863                           ;	Low-Voltage Programming Enable
   864                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   865  8008                     	org	32776
   866  8008  1CFF               	dw	7423

Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    UART_writeStr@data	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_UART_writeStr
    _UART_writeStr->_UART_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     151
                                              4 COMMON     2     2      0
                            _MCUinit
                         _UART_write
                      _UART_writeStr
 ---------------------------------------------------------------------------------
 (1) _UART_writeStr                                        3     1      2     136
                                              1 COMMON     3     1      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MCUinit                                              0     0      0       0
                             _IOinit
                            _OSCinit
                           _UARTinit
 ---------------------------------------------------------------------------------
 (2) _UARTinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOinit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCUinit
     _IOinit
     _OSCinit
     _UARTinit
   _UART_write
   _UART_writeStr
     _UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       6       2       42.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Sep 19 01:27:41 2021

                     l41 07B7                       l50 079B                       l44 07C1  
                     l62 07AD                       l47 07C5                       l56 07A4  
                     l59 07A6                       l68 07DC                       u10 07AB  
                     u11 07AA                       u20 07C5                       u21 07C4  
                     u40 07DC                       u41 07DB                       u57 07F4  
                    l720 07CF                      l722 07D3                      l730 07EB  
                    l716 07C6                      l732 07EF                      l724 07DD  
                    l718 07C7                      l726 07E0                      l680 07B8  
                    l728 07E7                      l682 0798                      l690 07A3  
                    l684 079C                      l692 07AE                      l676 07A6  
                    l686 07A0                      l694 07B1                      l678 07AB  
                    l688 07A2                      l696 07B4                      wreg 0009  
                   STR_1 0800          __end_of_MCUinit 07B8                     _main 07DD  
        __end_of_OSCinit 07C6                     fsr0h 0005                     indf0 0000  
                   fsr0l 0004                     btemp 007E                     start 0002  
                  ?_main 0070                    _SPBRG 019B                    _TXREG 019A  
       __end_of_UARTinit 07A5              ?_UART_write 0070                    status 0003  
                  wtemp0 007E        UART_writeStr@data 0071          __initialization 07FD  
           __end_of_main 07FD                   ??_main 0074                ??_MCUinit 0070  
              ??_OSCinit 0070                   _IOinit 0798      __size_of_UART_write 0009  
__end_of__initialization 07FD           __pcstackCOMMON 0070                ?_UARTinit 0070  
                ?_IOinit 0070               __pmaintext 07DD    __end_of_UART_writeStr 07DD  
             ??_UARTinit 0070                  _MCUinit 07AE                  _OSCinit 07B8  
           ??_UART_write 0070          __size_of_IOinit 0004       __end_of_UART_write 07AE  
                __ptext1 07C6                  __ptext2 07A5                  __ptext3 07AE  
                __ptext4 079C                  __ptext5 07B8                  __ptext6 0798  
   end_of_initialization 07FD                _RCSTAbits 019D              UART_write@c 0070  
              _TRISAbits 008C                _TXSTAbits 019E           __end_of_IOinit 079C  
            _BAUDCONbits 019F        __size_of_UARTinit 0009      start_initialization 07FD  
               ??_IOinit 0070                ___latbits 0001                 ?_MCUinit 0070  
               ?_OSCinit 0070   __size_of_UART_writeStr 0017                 _UARTinit 079C  
       __size_of_MCUinit 000A         __size_of_OSCinit 000E            _UART_writeStr 07C6  
          __size_of_main 0020           ?_UART_writeStr 0071              _OSCSTATbits 009A  
             _OSCCONbits 0099            __pstringtext1 0800            __pstringtext2 0000  
             _UART_write 07A5          ??_UART_writeStr 0073  
