

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 22 23:01:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	text8,local,class=CODE,merge=1,delta=2
    15                           	psect	text9,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC12F1840 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  010C                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0115                     	;# 
    97  0116                     	;# 
    98  0117                     	;# 
    99  0118                     	;# 
   100  0119                     	;# 
   101  011A                     	;# 
   102  011B                     	;# 
   103  011D                     	;# 
   104  011D                     	;# 
   105  018C                     	;# 
   106  0191                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0194                     	;# 
   113  0195                     	;# 
   114  0196                     	;# 
   115  0197                     	;# 
   116  0199                     	;# 
   117  019A                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019E                     	;# 
   126  019F                     	;# 
   127  020C                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  0212                     	;# 
   131  0212                     	;# 
   132  0213                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0294                     	;# 
   148  0295                     	;# 
   149  0295                     	;# 
   150  0296                     	;# 
   151  0391                     	;# 
   152  0392                     	;# 
   153  0393                     	;# 
   154  039A                     	;# 
   155  039C                     	;# 
   156  039D                     	;# 
   157  039E                     	;# 
   158  039F                     	;# 
   159  0FE4                     	;# 
   160  0FE5                     	;# 
   161  0FE6                     	;# 
   162  0FE7                     	;# 
   163  0FE8                     	;# 
   164  0FE9                     	;# 
   165  0FEA                     	;# 
   166  0FEB                     	;# 
   167  0FED                     	;# 
   168  0FEE                     	;# 
   169  0FEF                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  008C                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  010C                     	;# 
   211  0111                     	;# 
   212  0112                     	;# 
   213  0115                     	;# 
   214  0116                     	;# 
   215  0117                     	;# 
   216  0118                     	;# 
   217  0119                     	;# 
   218  011A                     	;# 
   219  011B                     	;# 
   220  011D                     	;# 
   221  011D                     	;# 
   222  018C                     	;# 
   223  0191                     	;# 
   224  0191                     	;# 
   225  0192                     	;# 
   226  0193                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0194                     	;# 
   230  0195                     	;# 
   231  0196                     	;# 
   232  0197                     	;# 
   233  0199                     	;# 
   234  019A                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  019C                     	;# 
   241  019D                     	;# 
   242  019E                     	;# 
   243  019F                     	;# 
   244  020C                     	;# 
   245  0211                     	;# 
   246  0211                     	;# 
   247  0212                     	;# 
   248  0212                     	;# 
   249  0213                     	;# 
   250  0213                     	;# 
   251  0214                     	;# 
   252  0214                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0291                     	;# 
   261  0291                     	;# 
   262  0292                     	;# 
   263  0293                     	;# 
   264  0294                     	;# 
   265  0295                     	;# 
   266  0295                     	;# 
   267  0296                     	;# 
   268  0391                     	;# 
   269  0392                     	;# 
   270  0393                     	;# 
   271  039A                     	;# 
   272  039C                     	;# 
   273  039D                     	;# 
   274  039E                     	;# 
   275  039F                     	;# 
   276  0FE4                     	;# 
   277  0FE5                     	;# 
   278  0FE6                     	;# 
   279  0FE7                     	;# 
   280  0FE8                     	;# 
   281  0FE9                     	;# 
   282  0FEA                     	;# 
   283  0FEB                     	;# 
   284  0FED                     	;# 
   285  0FEE                     	;# 
   286  0FEF                     	;# 
   287  0011                     _PIR1bits	set	17
   288  000B                     _INTCONbits	set	11
   289  009B                     _ADRES	set	155
   290  009E                     _ADCON1bits	set	158
   291  009D                     _ADCON0bits	set	157
   292  008C                     _TRISAbits	set	140
   293  009A                     _OSCSTATbits	set	154
   294  0099                     _OSCCONbits	set	153
   295  0117                     _FVRCONbits	set	279
   296  019A                     _TXREG	set	410
   297  019D                     _RCSTAbits	set	413
   298  019B                     _SPBRG	set	411
   299  019F                     _BAUDCONbits	set	415
   300  019E                     _TXSTAbits	set	414
   301  018C                     _ANSELAbits	set	396
   302  0211                     _SSP1BUF	set	529
   303  0216                     _SSP1CON2bits	set	534
   304  0212                     _SSP1ADD	set	530
   305  0215                     _SSP1CON1bits	set	533
   306                           
   307                           	psect	cinit
   308  07FD                     start_initialization:	
   309                           ; #config settings
   310                           
   311  07FD                     __initialization:
   312  07FD                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  07FD                     __end_of__initialization:
   316  07FD  0020               	movlb	0
   317  07FE  3187  2FDA         	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	cstackCOMMON
   320  0070                     __pcstackCOMMON:
   321  0070                     ?_MCUinit:
   322  0070                     ??_MCUinit:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_I2C_start:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_I2C_start:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_I2C_write:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_I2C_write:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_I2C_stop:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_I2C_stop:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_OSCinit:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ??_OSCinit:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_IOinit:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_IOinit:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_ADCinit:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ??_ADCinit:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_UARTinit:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_UARTinit:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_I2Cinit:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ??_I2Cinit:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     I2C_write@data:	
   377                           ; 1 bytes @ 0x0
   378                           
   379                           
   380                           ; 1 bytes @ 0x0
   381  0070                     	ds	1
   382  0071                     ??_main:
   383                           
   384                           ; 1 bytes @ 0x1
   385  0071                     	ds	2
   386                           
   387                           	psect	maintext
   388  07DA                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 31 in file "main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B1F/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   408 ;;      Params:         0       0       0       0
   409 ;;      Locals:         0       0       0       0
   410 ;;      Temps:          2       0       0       0
   411 ;;      Totals:         2       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels required when called: 2
   414 ;; This function calls:
   415 ;;		_I2C_start
   416 ;;		_I2C_stop
   417 ;;		_I2C_write
   418 ;;		_MCUinit
   419 ;; This function is called by:
   420 ;;		Startup code after reset
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _main
   426  07DA                     _main:
   427  07DA                     l793:	
   428                           ;incstack = 0
   429                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   430                           
   431                           
   432                           ;main.c: 33:     MCUinit();
   433  07DA  3187  27AF  3187   	fcall	_MCUinit
   434  07DD                     l795:
   435                           
   436                           ;main.c: 37:     {;main.c: 39:         I2C_start();
   437  07DD  3187  276D  3187   	fcall	_I2C_start
   438  07E0                     l797:
   439                           
   440                           ;main.c: 40:         I2C_write(0xC0);
   441  07E0  30C0               	movlw	192
   442  07E1  3187  277F  3187   	fcall	_I2C_write
   443  07E4                     l799:
   444                           
   445                           ;main.c: 41:         I2C_write(0x07);
   446  07E4  3007               	movlw	7
   447  07E5  3187  277F  3187   	fcall	_I2C_write
   448  07E8                     l801:
   449                           
   450                           ;main.c: 42:         I2C_write(0xFF);
   451  07E8  30FF               	movlw	255
   452  07E9  3187  277F  3187   	fcall	_I2C_write
   453                           
   454                           ;main.c: 43:         I2C_stop();
   455  07EC  3187  2776  3187   	fcall	_I2C_stop
   456  07EF                     l803:
   457                           
   458                           ;main.c: 49:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   459  07EF  3006               	movlw	6
   460  07F0  00F2               	movwf	??_main+1
   461  07F1  3013               	movlw	19
   462  07F2  00F1               	movwf	??_main
   463  07F3  30AE               	movlw	174
   464  07F4                     u107:
   465  07F4  0B89               	decfsz	9,f
   466  07F5  2FF4               	goto	u107
   467  07F6  0BF1               	decfsz	??_main,f
   468  07F7  2FF4               	goto	u107
   469  07F8  0BF2               	decfsz	??_main+1,f
   470  07F9  2FF4               	goto	u107
   471  07FA  2FDD               	goto	l795
   472  07FB  3180  2802         	ljmp	start
   473  07FD                     __end_of_main:
   474                           
   475                           	psect	text1
   476  07AF                     __ptext1:	
   477 ;; *************** function _MCUinit *****************
   478 ;; Defined at:
   479 ;;		line 57 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   493 ;;      Params:         0       0       0       0
   494 ;;      Locals:         0       0       0       0
   495 ;;      Temps:          0       0       0       0
   496 ;;      Totals:         0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; Hardware stack levels required when called: 1
   500 ;; This function calls:
   501 ;;		_ADCinit
   502 ;;		_I2Cinit
   503 ;;		_IOinit
   504 ;;		_OSCinit
   505 ;;		_UARTinit
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           
   512                           ;psect for function _MCUinit
   513  07AF                     _MCUinit:
   514  07AF                     l771:	
   515                           ;incstack = 0
   516                           ; Regs used in _MCUinit: [wreg+status,2+status,0+pclath+cstack]
   517                           
   518                           
   519                           ;main.c: 58:     OSCinit();
   520  07AF  3187  27A1  3187   	fcall	_OSCinit
   521  07B2                     l773:
   522                           
   523                           ;main.c: 59:     IOinit();
   524  07B2  3187  276C  3187   	fcall	_IOinit
   525  07B5                     l775:
   526                           
   527                           ;main.c: 60:     ADCinit();
   528  07B5  3187  27C0  3187   	fcall	_ADCinit
   529  07B8                     l777:
   530                           
   531                           ;main.c: 62:     UARTinit();
   532  07B8  3187  278A  3187   	fcall	_UARTinit
   533  07BB                     l779:
   534                           
   535                           ;main.c: 63:     I2Cinit();
   536  07BB  3187  2795  3187   	fcall	_I2Cinit
   537  07BE                     l781:
   538                           
   539                           ;main.c: 64:     INTCONbits.GIE = 1;
   540  07BE  178B               	bsf	11,7	;volatile
   541  07BF                     l69:
   542  07BF  0008               	return
   543  07C0                     __end_of_MCUinit:
   544                           
   545                           	psect	text2
   546  078A                     __ptext2:	
   547 ;; *************** function _UARTinit *****************
   548 ;; Defined at:
   549 ;;		line 124 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   563 ;;      Params:         0       0       0       0
   564 ;;      Locals:         0       0       0       0
   565 ;;      Temps:          0       0       0       0
   566 ;;      Totals:         0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_MCUinit
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           
   577                           ;psect for function _UARTinit
   578  078A                     _UARTinit:
   579  078A                     l755:	
   580                           ;incstack = 0
   581                           ; Regs used in _UARTinit: [wreg]
   582                           
   583                           
   584                           ;main.c: 125:     TRISAbits.TRISA0 = 0;
   585  078A  0021               	movlb	1	; select bank1
   586  078B  100C               	bcf	12,0	;volatile
   587                           
   588                           ;main.c: 126:     TXSTAbits.SYNC = 0;
   589  078C  0023               	movlb	3	; select bank3
   590  078D  121E               	bcf	30,4	;volatile
   591                           
   592                           ;main.c: 127:     TXSTAbits.BRGH = 1;
   593  078E  151E               	bsf	30,2	;volatile
   594                           
   595                           ;main.c: 128:     BAUDCONbits.BRG16 = 0;
   596  078F  119F               	bcf	31,3	;volatile
   597  0790                     l757:
   598                           
   599                           ;main.c: 129:     SPBRG = 25;
   600  0790  3019               	movlw	25
   601  0791  009B               	movwf	27	;volatile
   602  0792                     l759:
   603                           
   604                           ;main.c: 131:     RCSTAbits.SPEN = 1;
   605  0792  179D               	bsf	29,7	;volatile
   606  0793                     l761:
   607                           
   608                           ;main.c: 132:     TXSTAbits.TXEN = 1;
   609  0793  169E               	bsf	30,5	;volatile
   610  0794                     l96:
   611  0794  0008               	return
   612  0795                     __end_of_UARTinit:
   613                           
   614                           	psect	text3
   615  07A1                     __ptext3:	
   616 ;; *************** function _OSCinit *****************
   617 ;; Defined at:
   618 ;;		line 69 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   632 ;;      Params:         0       0       0       0
   633 ;;      Locals:         0       0       0       0
   634 ;;      Temps:          0       0       0       0
   635 ;;      Totals:         0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_MCUinit
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _OSCinit
   647  07A1                     _OSCinit:
   648  07A1                     l743:	
   649                           ;incstack = 0
   650                           ; Regs used in _OSCinit: [wreg+status,2+status,0]
   651                           
   652                           
   653                           ;main.c: 70:     OSCCONbits.SCS = 0B10;
   654  07A1  0021               	movlb	1	; select bank1
   655  07A2  0819               	movf	25,w	;volatile
   656  07A3  39FC               	andlw	-4
   657  07A4  3802               	iorlw	2
   658  07A5  0099               	movwf	25	;volatile
   659                           
   660                           ;main.c: 71:     OSCCONbits.IRCF = 0B1101;
   661  07A6  0819               	movf	25,w	;volatile
   662  07A7  3987               	andlw	-121
   663  07A8  3868               	iorlw	104
   664  07A9  0099               	movwf	25	;volatile
   665  07AA                     l72:	
   666                           ;main.c: 72:     while(OSCSTATbits.HFIOFS != 1);
   667                           
   668  07AA  1C1A               	btfss	26,0	;volatile
   669  07AB  2FAD               	goto	u11
   670  07AC  2FAE               	goto	u10
   671  07AD                     u11:
   672  07AD  2FAA               	goto	l72
   673  07AE                     u10:
   674  07AE                     l75:
   675  07AE  0008               	return
   676  07AF                     __end_of_OSCinit:
   677                           
   678                           	psect	text4
   679  076C                     __ptext4:	
   680 ;; *************** function _IOinit *****************
   681 ;; Defined at:
   682 ;;		line 77 in file "main.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		None
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   696 ;;      Params:         0       0       0       0
   697 ;;      Locals:         0       0       0       0
   698 ;;      Temps:          0       0       0       0
   699 ;;      Totals:         0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_MCUinit
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _IOinit
   711  076C                     _IOinit:
   712  076C                     l78:	
   713                           ;incstack = 0
   714                           ; Regs used in _IOinit: []
   715                           
   716  076C  0008               	return
   717  076D                     __end_of_IOinit:
   718                           
   719                           	psect	text5
   720  0795                     __ptext5:	
   721 ;; *************** function _I2Cinit *****************
   722 ;; Defined at:
   723 ;;		line 146 in file "main.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   737 ;;      Params:         0       0       0       0
   738 ;;      Locals:         0       0       0       0
   739 ;;      Temps:          0       0       0       0
   740 ;;      Totals:         0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_MCUinit
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _I2Cinit
   752  0795                     _I2Cinit:
   753  0795                     l763:	
   754                           ;incstack = 0
   755                           ; Regs used in _I2Cinit: [wreg+status,2+status,0]
   756                           
   757                           
   758                           ;main.c: 147:     TRISAbits.TRISA1 = 1;
   759  0795  0021               	movlb	1	; select bank1
   760  0796  148C               	bsf	12,1	;volatile
   761                           
   762                           ;main.c: 148:     TRISAbits.TRISA2 = 1;
   763  0797  150C               	bsf	12,2	;volatile
   764  0798                     l765:
   765                           
   766                           ;main.c: 150:     SSP1CON1bits.SSPM = 0x08;
   767  0798  0024               	movlb	4	; select bank4
   768  0799  0815               	movf	21,w	;volatile
   769  079A  39F0               	andlw	-16
   770  079B  3808               	iorlw	8
   771  079C  0095               	movwf	21	;volatile
   772  079D                     l767:
   773                           
   774                           ;main.c: 151:     SSP1ADD = 0x09;
   775  079D  3009               	movlw	9
   776  079E  0092               	movwf	18	;volatile
   777  079F                     l769:
   778                           
   779                           ;main.c: 152:     SSP1CON1bits.SSPEN = 1;
   780  079F  1695               	bsf	21,5	;volatile
   781  07A0                     l111:
   782  07A0  0008               	return
   783  07A1                     __end_of_I2Cinit:
   784                           
   785                           	psect	text6
   786  07C0                     __ptext6:	
   787 ;; *************** function _ADCinit *****************
   788 ;; Defined at:
   789 ;;		line 90 in file "main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   803 ;;      Params:         0       0       0       0
   804 ;;      Locals:         0       0       0       0
   805 ;;      Temps:          0       0       0       0
   806 ;;      Totals:         0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_MCUinit
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           
   817                           ;psect for function _ADCinit
   818  07C0                     _ADCinit:
   819  07C0                     l745:	
   820                           ;incstack = 0
   821                           ; Regs used in _ADCinit: [wreg+status,2+status,0]
   822                           
   823                           
   824                           ;main.c: 92:     TRISAbits.TRISA4 = 1;
   825  07C0  0021               	movlb	1	; select bank1
   826  07C1  160C               	bsf	12,4	;volatile
   827                           
   828                           ;main.c: 93:     ANSELAbits.ANSA4 = 1;
   829  07C2  0023               	movlb	3	; select bank3
   830  07C3  160C               	bsf	12,4	;volatile
   831  07C4                     l747:
   832                           
   833                           ;main.c: 94:     ADCON0bits.CHS = 3;
   834  07C4  0021               	movlb	1	; select bank1
   835  07C5  081D               	movf	29,w	;volatile
   836  07C6  3983               	andlw	-125
   837  07C7  380C               	iorlw	12
   838  07C8  009D               	movwf	29	;volatile
   839  07C9                     l749:
   840                           
   841                           ;main.c: 96:     FVRCONbits.FVREN = 1;
   842  07C9  0022               	movlb	2	; select bank2
   843  07CA  1797               	bsf	23,7	;volatile
   844                           
   845                           ;main.c: 97:     FVRCONbits.ADFVR = 3;
   846  07CB  3003               	movlw	3
   847  07CC  0497               	iorwf	23,f	;volatile
   848  07CD                     l81:	
   849                           ;main.c: 98:     while(!FVRCONbits.FVRRDY);
   850                           
   851  07CD  1F17               	btfss	23,6	;volatile
   852  07CE  2FD0               	goto	u21
   853  07CF  2FD1               	goto	u20
   854  07D0                     u21:
   855  07D0  2FCD               	goto	l81
   856  07D1                     u20:
   857  07D1                     l751:
   858                           
   859                           ;main.c: 100:     ADCON1bits.ADPREF = 3;
   860  07D1  3003               	movlw	3
   861  07D2  0021               	movlb	1	; select bank1
   862  07D3  049E               	iorwf	30,f	;volatile
   863                           
   864                           ;main.c: 101:     ADCON1bits.ADCS = 4;
   865  07D4  081E               	movf	30,w	;volatile
   866  07D5  398F               	andlw	-113
   867  07D6  3840               	iorlw	64
   868  07D7  009E               	movwf	30	;volatile
   869  07D8                     l753:
   870                           
   871                           ;main.c: 102:     ADCON0bits.ADON = 1;
   872  07D8  141D               	bsf	29,0	;volatile
   873  07D9                     l84:
   874  07D9  0008               	return
   875  07DA                     __end_of_ADCinit:
   876                           
   877                           	psect	text7
   878  077F                     __ptext7:	
   879 ;; *************** function _I2C_write *****************
   880 ;; Defined at:
   881 ;;		line 173 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  data            1    wreg     unsigned char 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  data            1    0[COMMON] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   895 ;;      Params:         0       0       0       0
   896 ;;      Locals:         1       0       0       0
   897 ;;      Temps:          0       0       0       0
   898 ;;      Totals:         1       0       0       0
   899 ;;Total ram usage:        1 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           
   909                           ;psect for function _I2C_write
   910  077F                     _I2C_write:
   911                           
   912                           ;incstack = 0
   913                           ; Regs used in _I2C_write: [wreg]
   914                           ;I2C_write@data stored from wreg
   915  077F  00F0               	movwf	I2C_write@data
   916  0780                     l785:
   917                           
   918                           ;main.c: 174:     SSP1BUF = data;
   919  0780  0870               	movf	I2C_write@data,w
   920  0781  0024               	movlb	4	; select bank4
   921  0782  0091               	movwf	17	;volatile
   922  0783                     l132:	
   923                           ;main.c: 175:     while(!PIR1bits.SSP1IF);
   924                           
   925  0783  0020               	movlb	0	; select bank0
   926  0784  1D91               	btfss	17,3	;volatile
   927  0785  2F87               	goto	u41
   928  0786  2F88               	goto	u40
   929  0787                     u41:
   930  0787  2F83               	goto	l132
   931  0788                     u40:
   932  0788                     l134:
   933                           
   934                           ;main.c: 176:     PIR1bits.SSP1IF = 0;
   935  0788  1191               	bcf	17,3	;volatile
   936  0789                     l135:
   937  0789  0008               	return
   938  078A                     __end_of_I2C_write:
   939                           
   940                           	psect	text8
   941  0776                     __ptext8:	
   942 ;; *************** function _I2C_stop *****************
   943 ;; Defined at:
   944 ;;		line 161 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		None
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   958 ;;      Params:         0       0       0       0
   959 ;;      Locals:         0       0       0       0
   960 ;;      Temps:          0       0       0       0
   961 ;;      Totals:         0       0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _I2C_stop
   973  0776                     _I2C_stop:
   974  0776                     l787:	
   975                           ;incstack = 0
   976                           ; Regs used in _I2C_stop: []
   977                           
   978                           
   979                           ;main.c: 162:     SSP1CON2bits.PEN = 1;
   980  0776  0024               	movlb	4	; select bank4
   981  0777  1516               	bsf	22,2	;volatile
   982  0778                     l120:	
   983                           ;main.c: 163:     while(!PIR1bits.SSP1IF);
   984                           
   985  0778  0020               	movlb	0	; select bank0
   986  0779  1D91               	btfss	17,3	;volatile
   987  077A  2F7C               	goto	u51
   988  077B  2F7D               	goto	u50
   989  077C                     u51:
   990  077C  2F78               	goto	l120
   991  077D                     u50:
   992  077D                     l122:
   993                           
   994                           ;main.c: 164:     PIR1bits.SSP1IF = 0;
   995  077D  1191               	bcf	17,3	;volatile
   996  077E                     l123:
   997  077E  0008               	return
   998  077F                     __end_of_I2C_stop:
   999                           
  1000                           	psect	text9
  1001  076D                     __ptext9:	
  1002 ;; *************** function _I2C_start *****************
  1003 ;; Defined at:
  1004 ;;		line 155 in file "main.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		None
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1018 ;;      Params:         0       0       0       0
  1019 ;;      Locals:         0       0       0       0
  1020 ;;      Temps:          0       0       0       0
  1021 ;;      Totals:         0       0       0       0
  1022 ;;Total ram usage:        0 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _I2C_start
  1033  076D                     _I2C_start:
  1034  076D                     l783:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _I2C_start: []
  1037                           
  1038                           
  1039                           ;main.c: 156:     SSP1CON2bits.SEN = 1;
  1040  076D  0024               	movlb	4	; select bank4
  1041  076E  1416               	bsf	22,0	;volatile
  1042  076F                     l114:	
  1043                           ;main.c: 157:     while(!PIR1bits.SSP1IF);
  1044                           
  1045  076F  0020               	movlb	0	; select bank0
  1046  0770  1D91               	btfss	17,3	;volatile
  1047  0771  2F73               	goto	u31
  1048  0772  2F74               	goto	u30
  1049  0773                     u31:
  1050  0773  2F6F               	goto	l114
  1051  0774                     u30:
  1052  0774                     l116:
  1053                           
  1054                           ;main.c: 158:     PIR1bits.SSP1IF = 0;
  1055  0774  1191               	bcf	17,3	;volatile
  1056  0775                     l117:
  1057  0775  0008               	return
  1058  0776                     __end_of_I2C_start:
  1059  007E                     btemp	set	126	;btemp
  1060  007E                     wtemp0	set	126
  1061                           
  1062                           	psect	config
  1063                           
  1064                           ;Config register CONFIG1 @ 0x8007
  1065                           ;	Oscillator Selection
  1066                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1067                           ;	Watchdog Timer Enable
  1068                           ;	WDTE = OFF, WDT disabled
  1069                           ;	Power-up Timer Enable
  1070                           ;	PWRTE = OFF, PWRT disabled
  1071                           ;	MCLR Pin Function Select
  1072                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1073                           ;	Flash Program Memory Code Protection
  1074                           ;	CP = OFF, Program memory code protection is disabled
  1075                           ;	Data Memory Code Protection
  1076                           ;	CPD = OFF, Data memory code protection is disabled
  1077                           ;	Brown-out Reset Enable
  1078                           ;	BOREN = OFF, Brown-out Reset disabled
  1079                           ;	Clock Out Enable
  1080                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1081                           ;	Internal/External Switchover
  1082                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1083                           ;	Fail-Safe Clock Monitor Enable
  1084                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1085  8007                     	org	32775
  1086  8007  09A4               	dw	2468
  1087                           
  1088                           ;Config register CONFIG2 @ 0x8008
  1089                           ;	Flash Memory Self-Write Protection
  1090                           ;	WRT = OFF, Write protection off
  1091                           ;	PLL Enable
  1092                           ;	PLLEN = OFF, 4x PLL disabled
  1093                           ;	Stack Overflow/Underflow Reset Enable
  1094                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1095                           ;	Brown-out Reset Voltage Selection
  1096                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1097                           ;	Low-Voltage Programming Enable
  1098                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1099  8008                     	org	32776
  1100  8008  1CFF               	dw	7423

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              1 COMMON     2     2      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                            _MCUinit
 ---------------------------------------------------------------------------------
 (1) _MCUinit                                              0     0      0       0
                            _ADCinit
                            _I2Cinit
                             _IOinit
                            _OSCinit
                           _UARTinit
 ---------------------------------------------------------------------------------
 (2) _UARTinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOinit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2Cinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_start
   _I2C_stop
   _I2C_write
   _MCUinit
     _ADCinit
     _I2Cinit
     _IOinit
     _OSCinit
     _UARTinit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       3       2       21.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 22 23:01:20 2021

                     l72 07AA                       l81 07CD                       l75 07AE  
                     l84 07D9                       l69 07BF                       l78 076C  
                     l96 0794                       u10 07AE                       u11 07AD  
                     u20 07D1                       u21 07D0                       u30 0774  
                     u31 0773                       u40 0788                       u41 0787  
                     u50 077D                       u51 077C       __size_of_I2C_start 0009  
     __size_of_I2C_write 000B                      l111 07A0                      l120 0778  
                    l114 076F                      l122 077D                      l123 077E  
                    l116 0774                      l132 0783                      l117 0775  
                    l134 0788                      l135 0789                      l801 07E8  
                    l803 07EF                      l751 07D1                      l743 07A1  
                    l753 07D8                      l745 07C0                      l761 0793  
                    l747 07C4                      l763 0795                      l755 078A  
                    l771 07AF                      l749 07C9                      l765 0798  
                    l757 0790                      l781 07BE                      l773 07B2  
                    l783 076D                      l767 079D                      l759 0792  
                    l775 07B5                      l785 0780                      l769 079F  
                    l777 07B8                      l793 07DA                      l787 0776  
                    l779 07BB                      l795 07DD                      l797 07E0  
                    l799 07E4                      u107 07F4                      wreg 0009  
        __end_of_I2Cinit 07A1          __end_of_ADCinit 07DA          __end_of_MCUinit 07C0  
                   _main 07DA          __end_of_OSCinit 07AF                     btemp 007E  
                   start 0002         __end_of_I2C_stop 077F            I2C_write@data 0070  
                  ?_main 0070                    _ADRES 009B                    _SPBRG 019B  
                  _TXREG 019A         __end_of_UARTinit 0795        __end_of_I2C_start 0776  
                  wtemp0 007E        __end_of_I2C_write 078A          __initialization 07FD  
           __end_of_main 07FD                ??_I2Cinit 0070                ??_ADCinit 0070  
                 ??_main 0071                ??_MCUinit 0070                ??_OSCinit 0070  
                 _IOinit 076C                ?_I2C_stop 0070  __end_of__initialization 07FD  
         __pcstackCOMMON 0070                ?_UARTinit 0070               ??_I2C_stop 0070  
                ?_IOinit 0070               __pmaintext 07DA               ??_UARTinit 0070  
                _I2Cinit 0795                  _ADCinit 07C0                  _MCUinit 07AF  
                _SSP1ADD 0212                  _SSP1BUF 0211                  _OSCinit 07A1  
        __size_of_IOinit 0001                _I2C_start 076D                _I2C_write 077F  
                __ptext1 07AF                  __ptext2 078A                  __ptext3 07A1  
                __ptext4 076C                  __ptext5 0795                  __ptext6 07C0  
                __ptext7 077F                  __ptext8 0776                  __ptext9 076D  
   end_of_initialization 07FD               ?_I2C_start 0070               ?_I2C_write 0070  
              _RCSTAbits 019D                _TRISAbits 008C        __size_of_I2C_stop 0009  
              _TXSTAbits 019E           __end_of_IOinit 076D              _BAUDCONbits 019F  
      __size_of_UARTinit 000B      start_initialization 07FD                 ??_IOinit 0070  
            ??_I2C_start 0070              ??_I2C_write 0070                 ?_I2Cinit 0070  
               ?_ADCinit 0070                ___latbits 0001                 ?_MCUinit 0070  
               ?_OSCinit 0070                 _I2C_stop 0776                 _PIR1bits 0011  
               _UARTinit 078A               _ADCON0bits 009D               _ADCON1bits 009E  
       __size_of_I2Cinit 000C         __size_of_ADCinit 001A         __size_of_MCUinit 0011  
       __size_of_OSCinit 000E               _ANSELAbits 018C             _SSP1CON1bits 0215  
           _SSP1CON2bits 0216            __size_of_main 0023              _OSCSTATbits 009A  
             _INTCONbits 000B               _FVRCONbits 0117               _OSCCONbits 0099  
